 










 --> COMO VOCÊ APRENDEU, JAVASCRIPT É UMA 'HOSTED LANGUAGE'...





 --> isso significa que o javascript em si, a definição da linguagem, PODE 
 SER IMPLEMENTADO ___EM DIFERENTES___ AMBIENTES...





 -----> TUDO DE QUE VOCÊ PRECISA, NO FINAL DAS CONTAS, É UMA ___ENGINE JAVASCRIPT__, uma 

 ENGINE QUE 'PARSEIE' e 'EXECUTE' O código....



 --------------------------------------




 Ambiente mais comum: O browser. BROWSERS TEM SUAS PRÓPRIAS ENGINES; chrome tem a 'v8 engine'....





 -----> A JAVASCRIPT ENGINE DOS BROWSERS 'HOSTEIA' E EXECUTA O CÓDIGO JAVASCRIPT, portanto...




 ------> A JAVASCRIPT ENGINE, JUNTO DOS 'BROWSER APIs' (como o DOM e o BROWSER STORAGE, fetch API) ---> TUDO ISSO SE JUNTA PARA FORMAR UM CONJUNTO DE FERRAMNETAS PARA CRIAR APLICATIVOS RICOS, RICOS 'CLIENTSIDE APPLICATIONS'... ----> com elas você usa todas as features do código, com as diferentes keywords e etc...
------->  Isso tudo se junta para dar uma user experience melhor... tudo isso roda no browser.



-----------------------------------------






ISSO É BOM, CLARO...


MAS NADA IMPEDE QUE VOCÊ 'PEGUE' O JAVASCRIPT 


E EXECUTE O SEU CÓDIGO EM ___UM OUTRO LUGAR_____...




PODEMOS FAZER ISSO, PODEMOS EXECUTAR CÓDIGO JAVASCRIPT EM QUALQUER OUTRO LUGAR; podemos fazer 

isso por meio do simples ato de 'pegar' a javascript 

engine e levá-la PARA FORA DO BROWSER...




É ISSO, BASICAMENTE....




----------------------------




Nós podemos, assim que for retirada a javascript engine do browser, 

ADICIONAR NOSSOS PRÓPRIOS APIs (para trabalhar com o DOM, por exemplo...)....




----> podemos fazer isso PQ SE  A JAVASCRIPT ENGINE ESTÁ 'DETACHED' dA WEBPAGE, separada 
dela, NÃO EXISTIRÁ 'DOM', certo? ---> ISSO SIGNIFICA QUE NÃO EXISTIRÁ 
CÓDIGO HTML QUE PODERÍAMOS PARSEAR se executarmos esse javascript 

EM QUALQUER OUTRO LUGAR....




---> ainda assim, talvez queiramos ADICIONAR ___NOVAS APIs___....
APIs QUE NÃO EXISTEM NO BROWSER; POR EXEMPLO, 
PARA TRABALHAR COM A 'LOCAL FILE SYSTEM', ALGO QUE NÃO 
É POSSÍVEL NO BROWSER DEVIDO A RAZÕES DE SEGURANÇA...








---> E É ISSO EXATAMENTE O QUE É O 'NODE.JS'... É UMA 


V8 ENGINE EXTRAÍDA DO CHROME, a V8 engine oferecida pelo chrome, ENRIQUECIDA
 POR 

 APIs __EXTRAS___. -------> É BASICAMENTE A ENGINE QUE VOCÊ JÁ 

 CONHECE DO BROWSER, mas ao invés de ser limitada APENAS PELAS APIs do browser, 

 AQUI VOCÊ TEM ACESSO A APIs CUSTOM.... você tem acesso a essas custom 

 APIs PQ O NODE.JS roda ___FORA DO BROWSER____.





 ----> é isso o node.JS




---> ISSO SIGNIFICA QUE TODAS AS COISAS QUE VOCÊ APRENDEU SOBRE JAVASCRIPT SÃO RELEVANTES,

COM EXCEÇÃO DAS PARTES DO 'DOM' ou do 'browser storage', e outras apis do BROWSER...

essas apiS não são importantes quando trabalhamos com node.js....
--------------------------------------------------
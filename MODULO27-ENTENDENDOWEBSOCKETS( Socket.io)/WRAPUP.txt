














-----> CERTO, NESTE MÓDULO DEMOS UMA BOA OLHADA EM SOCKET.IO...











--> VIMOS O QUE PODEMOS FAZER COM ELE.... -->  PODEMOS __ EMPURRAR ___ INFO, VINDA DO SERVER,



AO __ CLIENT (clients dos users),

TUDO 


POR MEIO 

DAQUELE MÉTODO 

'.emit()'


FORNECIDO PELO SOCKET.IO...









---> O PROFESSOR TAMBÉM MENCIONA QUE 

O 

SOCKET.IO NÃO É 



A ÚNICA MANEIRA __ DE 
IMPLEMENTAR__ 




'websockets'... --> O QUE REALMENTE INTERESSA É ESSE PROTOCOLO 

'WEBSOCKET',



QUE TE DEIXA 

'PUSH DATA FROM THE SERVER TO A CONNECTED CLIENT'... --> a única diferença 

do 


socketio é que 



ELE DEIXA 


O USO 

DESSE PROTOCOLO 

'PARTICULARYL EASY',




FACILITA ESSA TECNOLOGIA... --> É UMA TECNOLOGIA CADA VEZ MAIS 




POPULAR....







--> VEJA 

OS DOCS DO SOCKET IO PARA VER 

QUAIS FEATURES

ELE OFERECE,


O QUE VOCÊ PODE FAZER COM ELE,

ETC ETC... -_> É UMA 

LIBRARY MUITO PODEROSA,


TE DA UM MONTE DE FEATURES,

ETC ETC..








--> VEJA AS OUTRAS IMPLEMENTAÇÕES QUE ELE TE DEIXA USAR...








--> WEBSOCKETS- --> É ALGO QUE 



'BUILDS UPON HTTP'- -->  VOCÊ OS ESTABELECE,

CMO VOCÊ VIU NO NOSSO APP,




____ POR MEIO DE UM 'HTTP HANDSHAKE' (

    o que significa que 

    VOCÊ PRECISA DE UM 
    'RUNNING HTTP SERVER',


comummente settado por meio de packages como 

EXPRESS/NODEJS... 

) -------> AÍ VOCÊ 


USA 

ESSE HTTP SERVER JÁ EXISTENTE PARA 



__ 
ESTABELECER __ UMA 

CONNECTION DE 'WEBSOCKETs'



em cima disso... (



    ou seja, 

    os 

    2 protocolos RODAM SIMULTANEAMENTE...
)










--> certo... é uma tecnologia legal que pode ser interessante 

para 

seu 
próximo projeto...
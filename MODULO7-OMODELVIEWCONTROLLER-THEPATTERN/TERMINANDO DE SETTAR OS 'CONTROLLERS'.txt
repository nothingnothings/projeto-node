ADICIONAMOS OS CONTROLLERS DE

'products' (relacionados a products)



NA ÚLTIMA LIÇÃO,




E AGORA 


É 

HORA DE FAZER A MESMA COISA,


MAS COM 


A PÁGINA 




DE ERRO 404... (the 404 route...)





---> PARA ISSO, CRÍAMOS UM NOVO ARQUIVO 


CONTROLLER,

de nome 

'404.js'...






--> AÍ VAMOS ATÉ 'app.js',

QUE 
É 


O LOCAL EM QUE RENDERIZAMOS A ROUTE DO 



ERRO 404 COMO FALLBACK (page not found)...



EIS O SEU CÓDIGO:





app.use(
  (req, res, next) => { 
 
      res.status(404).render('404', {pageTitle: 'Page not Found'});
 
    } 
)










--> CERTO... NÓS VAMOS PEGAR ESSE 


'  (req, res, next) => { 
 
      res.status(404).render('404', {pageTitle: 'Page not Found'});
 
    } 

'




E VAMOS TRANSPORTAR LÁ 

PARA 


O 


arquivo 

'404.js'...




EX:







exports.notFound = (req, res, next) => { 
 
    res.status(404).render('404', {pageTitle: 'Page not Found'});

  } 





EX:





app.use(

  notFoundController.notFound

)





-----------------------




CREIO QUE ISSO FUNCIONARÁ...








PROFESSOR DIZ QUE NOSSO 



ROUTE


DE 404


não precisava ter obrigatoriamente um controller,

mas 


é 

bom ter 1 para 

que 

fique 


PARECIDO COM A ESTRUTURA DAS ROUTES 


DO 'shop' e do 'add-product'....







--> SÓ O PROFESSOR ESCREVEU UM POUCO DIFERENTE:



ELE DEFINIU O NOME DA FILE COMO 

'error',


E AÍ 



O NOME DA FUNÇÃO 

COMO 

'get404'..








OK... COM ISSO, TEREMOS ADDADO NOSSO 

CONTROLLER da PÁGINA DE 'NOT FOUND'...






------------------








OK, COM ISSO JÁ TEMOS:



1) VIEWS 



2) CONTROLLERS....






--> SÓ FALTAM OS 'MODELS',


para completar 

o 

esquema 

de 

'MODEL VIEW CONTROLLER'...
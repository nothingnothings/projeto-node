











ACABAMOS ESTE MÓDULO...


ADICIONAMOS UM MONTE DE VALIDATING LOGIC 

__PARA AS ROTUES DE LOGIN, SIGNUP E ADD/CREATE PRODUCTS...













--> APRENDEMOS, TAMBÉM, QUE ESSE É UM 'TWO-STEP PROCCESS',


PROCESSO EM QUE __ ADICIONAMOS ___ __ 'VALIDATORS'

ÀS NOSSAS ROUTES ,




TUDO COM O PACKAGE ESPECIAL 'express-validator' ---------> 









É 

2

STEPS 


PQ 




1) TEMOS QUE ADICIONAR ESSES VALIDATORS àS ROUTES, COMO 'MIDDLEWARE'..









2) TEMOS __ QUE COLETAR ERROS, LÁ NOS NOSSOS CONTROLLERS, 

por meio de 

'validationResult(req)'.... ---> POR MEIO 


DOS 







CONTROLLERS, E A PARTIR DESSAS 'INFOS DE VALIDATION FAILED' armazenadas em 'validationResult',



NÓS __ RE-RENDERIZAMOS __ AS PÁGINAS, MOSTRANDO 



1 

DIV DE ERRO 


ENQUANTO RE-RENDERIZAMOS AS PAGES... --------> 










E  TAMBÉM APRENDEMOS QUE __ , PARA __ CONSEGUIR UMA BOA USER EXPERIENCE_,

O 

IDEAL 

É 

___RE-RENDERIZAR __a PÁGINA AO MESMO TEMPO QUE __ 

MANTEMOS__ O 'ORIGINAL INPUT'
 

 DIGITADO PELO USER,




 enquanto 


 MOSTRAMOS UMA ERROR MESSAGE QUE DÁ AO USER UMA 

 IDEIA 

 DE 

 QUE 

 'NADA 


 ESTAVA ERRADA NO SEU SERVER, E SIM COM O INPUT DIGITADO POR SUAS MÃOS'...











 --> PROFESSOR NOS INCENTIVA A CONSTRUIR NOSSOS PRÓPRIOS VALIDATORS,

 USAR 

 OS 

 BUILTIN VALIDATORS,

 ETC ETC.... -------> 





 ele diz que DEVEMOS PRATICAR O USO DESSES VALIDATORS...


 Attached, you find the source code for this section.

When using my source code, make sure to run npm install in the extracted folder!

Useful resources:

Express-Validator Docs: https://express-validator.github.io/docs/

Validator.js (which is used behind the scenes) Docs: https://github.com/chriso/validator.js
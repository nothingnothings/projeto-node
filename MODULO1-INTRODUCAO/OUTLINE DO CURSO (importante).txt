




AGORA QUE VIMOS O BÁSICO SOBRE O NODEJS E O QUE PODEMOS FAZER COM ELE,


(e até o utilizamos um pouco),



O PROFESSOR 


VAI NOS MOSTRAR O CONTEÚDO DESTE CURSO,







E EXPLICAR O QUE TEM NELE....










1) GETTING STARTED --> é onde estamos. Quase acabamos.... 







2) BRIEF JAVASCRIPT REFRESHER --> só para que relembremos todas as sintaxes básicas, também sobre algumas next gen features que usaremos no course...
        --> BASIC JAVASCRIPT KNOWLEDGE é presumida...




3) DEPOIS DO REFRESHER, VAMOS VER O BÁSICO DO NODEJS... --> COMO ELE FUNCIONA EM GERAL,
COMO __ PODEMOS TRABALHAR COM 'STREAMS OF DATA', e também ver COMO PODEMOS TRABALHAR COM ALGUNS 
MÓDULOS __CORE__ do nodejs... ---> são os detalhes nitty gritty... --> COISAS QUE VOCÊ __PRECISA__ SABER sobre a linguagem...



4) DEVELOPMENT EFICIENTE COM O NODEJS... ---> VAMOS VER COMO PODEMOS DEBUGGAR 
NOSSO CÓDIGO,

COMO PODEMOS 


FAZER HANDLE DE ERROS, ETC...



5) DEPOIS DISSO, VEREMOS 'EXPRESS.JS',


QUE É __ A FRAMEWORK __ MAIS POPULAR ___ USADA COM O NEXTJS... ---> 

O PROFESSOR VAI NOS EXPLICAR O PQ DE NÓS A UTILIZARMOS,

E TAMBÉM PQ AINDA O UTILIZAMOS NO CORAÇÃO DO NODEJS -----> PROFESSOR TAMBÉM 

VAI NOS 

EXPLICAR :


A) O PQ DE AINDA APRENDEMOS 'NODEJS' APESAR 

DE NÓS 
APENAS 

UTILIZAR, DE VERDADE, O EXPRESS.JS... --------> PQ O USO 

DO 

EXPRESS.JS deixa as coisas mais fáceis,

PQ 

FAZ SENTIDO, 

E VOCÊ VAI O UTILIZAR SE FOR 

TRABALHAR COM NODEJS.... --> ainda assim,

usamos 

o nodejs com tudo isso...





6) TRABALHAREMOS COM 'TEMPLATING ENGINES'... --> SÃO FERRAMENTAS, VOCÊ PODERIA DIZER,


QUE __ TE DEIXAM 'GENERATE HTML PAGES ON THE SERVER', COM __ CONTEÚDO DINÂMICO __ ENCODADO__ 

NELAS... ------> E É ASSIM, POR MEIO DESSE RECURSO,

QUE 

PODEMOS 

'RETURN DIFFERENT PAGES/PAGES COM CONTEÚDO DIFERENTE' __ DE VOLTA AOS SEUS USERS___.... 

(SERÁ UM MÓDULO IMPORTANTE)..





 

 7) VEREMOS O PATTERN DE 


 '
 MODEL-VIEW-CONTROLLER',


 pq é importante e pq o utilizamoS, E __ COMO O UTILIZAMOS__......






8) TAMBÉM VEREMOS __ ROUTING, ROUTING CONCEPTS ('advanced routes and models'),


PQ ROUTING É ALGO QUE TAMBÉM VAMOS APRENDER NO 

MÓDULO DO EXPRESS.JS...


(AQUI TAMBÉM VEREMOS ALGUNS __ MODELOS ___ DO 

'MODEL-VIEW-CONTROLLER' pattern...)





9) depois DISSO,



VAMOS COMEÇAR A VER AS __DATABASES____ --> 


vamos começar 

com 


o CONNECT DE NOSSA NODE APPLICATION COM 


UMA DATABASE 
'sql'...   (MySQL)....




Node + SQL 

(MySQL)... --------> 





10) ISSO FEITO,

VAMOS 


VER COMO USAR UMA PACKAGE QUE 

DEIXA O TRABALHO COM SEQUEL SER BEM MAIS FÁCIL,
a package 

de 

'Sequelize'...




11) DEPOIS 

DE 

VER 



O TRABALHO COM DATABASES 'SQL',


vamos 


ver COMO FAZER O CONNECT 

COM ___ DATABASES 

DE 
TIPO 


'NoSQL' 

(o MONGODB É UMA DELAS....) 





MONGODB --> É UMA DATABASE 'NoSQL'... 






10) DEPOIS DE TENTAR CONECTAR 

NOSSO 

APP A UMA DATABASE NoSQL (cujo melhor exemplo é o mongoDB),




VAMOS VER ____COMO ___ USAR 

O 

'Mongoose',



__ QUE __ DEIXA __ O TRABALHO __ 


COM 

ESSAS DATABASES 'NoSQL' 

bem mais fácil....






***** DEPOIS DISSO, SEGUIREMOS COM 'NoSQL' 

NO RESTO DO CURSO,


mas 

VAMOS APRENDER TANTO O 

'SQL'

como o 

'NoSQL'...



VAMOS APRENDER AMBOS...







11) DEPOIS DISSO, VEREMOS ___ SESSIONS E COOKIES,,



veremos o que 

eles são, 

PQ 

DEVEMOS OS UTILIZAR E 



__COMO OS UTILIZAR__..








12) VAMOS VER ____ AUTHENTICATION__, 


OU 


SEJA__, COMO 

PODEMOS 

ASSEGURAR QUE USERS 

POSSAM 



'SIGN UP' E 'SIGN IN'




com nosso app... 

(AUTHENTICATION)






13) VEREMOS COMO FAZER O ___ SEND DE EMAILS___.... ---> 


VEREMOS 

COMO 

FAZER 

O 'AUTO GENERATE DE EMAILS' 



QUANDO UM USER FIZER 'SIGN UP',

por exemplo...  


('Sending Emails')...








14) DEPOIS DISSO, 


VEREMOS 



ADVANCED AUTHENTICATION FEATURES,



E TAMBÉM VEREMOS 'AUTHORIZATION' (feature em que, por exemplo,

SÓ UM USUÁRIO QUE __ CRIOU UM PRODUCT__ PODE 

FAZER 'ADD' OU 'DELETE' DELE...
 )








15) DEPOIS DISSO,


VEREMOS 



'USER INPUT VALIDATION',





QUE É __ UMA PARTE CRUCIAL___ de qualquer WEBAPP,


pq 

VOCÊ 


QUER 

ASSEGURAR 

QUE A DATA QUE OS USERS INPUTTAM  

NOS SEUS 



FORMS É ___ CORRETA E VÁLIDA___ (aprenderemos como 

fzer isso nesse módulo)....




16) VEREMOS ___ERROR HANDLING____---> 

ISSO 

PQ 


__ERROS SEMPRE VAO ACONTECER...  ----> POR EXEMPLO,



SE O USER 


INPUTTA ALGO ERRADO... ---> professor vai nos mostrar como 

FAZER HANDLE DE ERRORS 



DE MANEIRAS ELEGANTES...







17) VAMOS VER ALGO IMPORTANTE:




FILE UPLOADS E DOWNLOADS... ---> ___VAMOS VER ___ COMO PODEMOS 

FAZER HANDLE 

DELES; COMO PODEMOS ESCREVER CODE QUE 


__'TAKES INCOMING FILES, STORES THEM' 

E AÍ 

É CAPAZ 

___ DE 'RETURN FILES'... -----> 


PROFESSOR VAI NOS MOSTRAR TBM COMO 


__ PODEMOS ___ 'AUTOMATICALLY GENERATE PDF DOCUMENTS'



NO SERVIDOR,

nesse módulo...





18) PAGINATION ---->  VAMOS VER COMO PODEMOS 


'RETURN OUR DATA IN CHUNKS',

em vez 

de 

return 

TODA A DATA DE UMA VEZ SÓ...  (o que 

não é ideal para sua BANDWIDTH..)





19 ) VEREMOS ASYNC REQUESTS;

PROFESSOR 


VAI EXPLICAR O QUE ELES SÃO ,

E COMO 

PODEMOS 

FAZER 'HANDLE' DELES COM O NODEJS...




20) POR FIM, 

PROFESSOR 


VAI NOS MOSTRAR 


COMO 

PODEMOS 

'HANDLE PAYMENTS',


como podemos 


'accept payments'



DE UM SERVIÇO CHAMADO DE 

'STRYPE JS'..


(que é algo que vamos, obviamente, precisar em qualquer 

SHOP QUE CONSTRUÍRMOS...)




21) POR FIM, BEM NO FINAL,

VAMOS 

VER UM 


TIPO 

DIFERENTE 

DE APLICATIVO QUE VOCÊ PODE CONSTRUIR 


COM O NODEJS;


VAMOS 


VER 



'REST APIs'.... ------> 



E 1 MÓDULO PODE NÃO PARECER 



MT,



MAS O PROFESSOR 

TEM 


2 

MÓDULOS SOBRE ISSO (REST API É UMA TECNOLOGIA MT IMPORTANTE...)






22) ADVANCED REST API FEATURES... ------> 


AQUI VEREMOS FILE UPLOADS 


EM REST APIs,


TBM 

AUTHENTICATION E PAGINATION... ------> 


E ESSES MODULES VAO USAR 

TUDO 


O QUE APRENDEMOS ANTERIORMENTE.....










----------> E, ADICIONALMENTE, ESSES MÓDULOS VÃO 


USAR TUDO O QUE APRENDEMOS NOS MÓDULOS ANTERIORES... --> ISSO PQ VOCê VAI APRENDER 

QUE UMA 

RESTFUL API 

NÃO DFIERE TANTO ASSIM 

DE UM 

APLICATIVO NODE 

COMUM... -------------------------> E O PROFESSOR VAI NOS MOSTRAR 



EM DETALHES QUAL CONHECIMENTO VOCÊ AINDA PRECISA,

E COMO 


VOCÊ 



DEVERÁ MUDAR 


ALGUMAS COISAS (e nem tantas coisas assim) PARA __ TRANSFORMAR__



UM APLICATIVO NODEJS JÁ EXISTENTE __ EM UMA RESTFUL API__....






---> E ASSIM QUE 

ACABARMOS COM TUDO ISSO,



professor passará a:




22) UMA SINTAXE MAIS MODERNA,



 O 


 'ASYNC-AWAIT' 



 COM O NODEJS...  ----->  VEREMOS COMO USAR ISSO NO NOSSO APLICATIVO 

 NODEJS....







 23) VEREMOS 



 'WEBSOCKETS' E 


 '
 SOCKET.IO' ... ----> ESSA É UMA TECNOLOGIA/CONJUNTO 

 DE 

 TECNOLOGIAS 

 QUE 

 TE 

 DEIXAM 

 ADICIONAR 


 'REAL TIME FUNCTIONALITIES'


 AO SEU APLICATIVO (por exemplo,
 
se 


um usuário __ ENVIA UMA MENSAGEM__ E AÍ VOCÊ QUER 


NOTIFICAR __INSTANTANEAMENTE OUTRO USUÁRIO DE QUE 



ESSA MESSAGE FOI ENVIADA...  ----> VOCê 

PODE USAR 


WEB SOCKETS PARA ISSO,


e o 

professor 

vai nos mostrar como isso funciona, neste módulo...



 ) 




 24) DEPOIS DISSO,

 DAREMOS UMA OLHADA EM UM TIPO DIFERENTE 

 DE 

 APIs,


 as 


 APIs 

 'GRAPHQL'.... ------> 









 GRAPHQL ---> GRAPHQL APIs ---> É UMA MANEIRA BEM MODERNA E POPULAR 

 DE 

 CONSTRUIR APIs,



 ELA 

 TEM ALGUMAS VANTAGENS SOBRE RESTFUL APIs (tbm algumas DESVANTAGENS....) ....





 --> O PROFESSOR VAI MERGULHAR NESSAS GRAPHQL APIs,



 e aí   ele vai NOS MOSTRAR 


 ESSA API E COMO ELA DIFERE DE OUTRAS APIs;



 VAI NOS MOSTRAR 


 ___ COMO BUILDAR UMA GRAPHQL 


 'FROM SCRATCH' ___ COM O 'NODEJS'... ------> 


 E ESSE 


 MODULE SERÁ 



 UM MODULE BEM GRANDE,

 AINDA QUE SEJA 

 SÓ 



 1 BLOCO NO SLIDE..





 25) VEREMOS __ DEPLOYMENT__ --> veremos como 


 PEGAR TODO O CÓDIGO QUE ESCREVEMOS,


 TODO O CODE 'NODE' 

 QUE 

 CONSTRUÍMOS.... VEREMOS COMO PEGAR TODO ESSE CÓDIGO E O MOVER 

 PARA 

 UM 


 SERVIDOR 

 DE VERDADE NA WEB,

 __ PARA_ QUE RODE LÁ.... ----> 


 ISSO VAI SER MOSTRADO LÁ... --> 

 NESSE MÓDULO,





 TAMBÉM VEREMOS COISAS COMO SETTAR 



 'SSL ENCRYPTION'... 









 -------> ISSO FEITO,

 O
  PROFESSOR 


  VAI 




TER UM MÓDULO BREVE 

SOBRE 






26) FUNCIONALIDADES DO NODEJS ___ ALÉM __ DO BUILD __ DE WEB SERVERS... ----> 



ISSO PQ VOCÊ PODE O UTILIZAR PARA ___ FAZER OUTRAS COISAS___.....





27) ROUNDUP E PRÓXIMAS ETAPAS....



----------------------------






TERMINADO TUDO ISSO,

VOCÊ SABERÁ MUITO SOBRE NODEJS 

e 


EXPRESS.JS...


 
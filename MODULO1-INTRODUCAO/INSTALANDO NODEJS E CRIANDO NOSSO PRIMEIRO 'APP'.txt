







-------> INSTALAMOS O NODEJS.... -----> (já havia instalado...)









--> BAIXE A VERSÃO MAIS RECENTE...









---> OK... ----> AGORA, COMO USAMOS NODEJS? 





---> A MANEIRA MAIS FÁCIL DE USAR É 



ABRIR 


SEU 



POWERSHELL/COMMAND PROMPT....







------> COMO PRIMEIRA ETAPA,


VOCê DEVE 

RODAR 


'node -v' ----------> 


ISSO VAI TE MOSTRAR 

A VERSÃO 
DO 


NODE 

JS 

QUE 

VOCÊ INSTALou....



(certo, isso funciona)...






-----------------------------





ISSO FEITO,

VOCÊ PODE 


USAR O COMANDO 

'node'



PARA ENTRAR NO MODO 'REPL' (repel)




do 


NODEJS....  --------> 



É UM 'SPECIAL INPUT MODE'.... ------> 













QUANDO VOCÊ DIGITA ISSO, 






VOCÊ 


ENTRA EM UM MODO __ EM QUE VOCÊ PODE 

'EXECUTE CODE AND THEN HAVE IT PARSED 

BY 

NODEJS ON THE FLY'....










-------> PROFESSOR NOS MOSTRA QUE PODEMOS 

USAR 

ESSE 'MODO' 





COMO UMA CALCULADORA,

por meio 
de 


escritas como 



'node 2 + 5'


----------------




NOSSA.

ISSO É LEGAL....









--> é tipo um terminal responsivo, você digita a coisa ali,


e o nodeJS, no terminal,



VAI INSTANTANEAMENTE 

EXECUTAR 

AQUELE 

CÓDIGO 

E SURGIR COM UMA 

'RESPONSE'

no terminal...









-----> testamos isso:


1) digite 'node' 


2) enter 


3) digite qualquer cálculo/operação...




-----------------------------------







--> ALÉM DE PODER RODAR ESSA CALCULADORA,



PODEMOS ___ ESCREVER__ 'ENTIRE JAVASCRIPT PROGRAMS' 




dentro desse negócio... 







----------> O PROFESSOR NÃO FARÁ ISSO,
 

 POR ISSO ELE QUITA COM 

 'ctrl + c'...










 ---------> EM VEZ DISSO, 



 O PROFESSOR DIZ QUE 



 DEVEMOS ESCREVER UM SCRIPT DE VERDADE COM O NODEJS,


 tudo para que 


 consigmaos 




 VER O QUE __ PODEMOS FAZER COM ELE____....









 -------> PARA ISSO,

 CRIE UM FOLDER 



 NO SEU COMPUTADOR E ENTÃO ABRA-O COM 

 SEU 




 IDE FAVORITO...





 --------> PROFESSOR VAI USAR VISUAL STUDIO CODE....






 ------------------------





 IDE ---> 







 ABRA O FOLDER DO SEU PROJETO...






 -----> você deve NAVEGAR 

 até 

 'novonovoprojeto1'... 




 -------------> PROFESSOR EXPLICA QUE HÁ 2 COISAS QUE ELE INSTALOU A MAIS AQUI.... ----> 


 O THEME 

 DE 


 'dark+'....



 -----------------------------




 PROFESSOR TAMBÉM INSTALOU UMA EXTENSÃO,


 a extensão 

 de 




 '''''MATERIAL ICON'''... 








 ---> ok.... 





 já temos isso... nos dá file icons especiais...








 ----> PROFESSOR VAI USAR GIT PARA FAZER O VERSION MANAGEMENT... 






 ----> PROFESSOR CRIA UM NOVO ARQUIVO,




 chamado de 


 'first-app.js'... ------> 








 VOCÊ DEVE USAR 

 '.js'



 COM O NODEJS,

 PQ 


 NÓS AINDA VAMOS 


CRIAR UM 

'JAVASCRIPT APP' (de tipo 'node')....







-------> DENTRO DESSE ARQUIVO, 


PODEMOS 

ESCREVER QUALQUER 


CÓDIGO QUE 

O 

NODEJS É CAPAZ DE EXECUTAR... 






----> PROFESSOR ESCREVE UM 'console.log('Hell from Node.js')' ,





QUE SERÁ OUTPUTTADO NO NOSSO CONSOLE....





---------------------------------






--> PROFESSOR DIZ QUE TAMBÉM PODEMOS EXECUTAR ESSE NOSSO ARQUIVO COM 



O NODEJS... ------> 



ele provavelmente escreverá 



'node first-app.js'...







-----> SIM, ISSO FUNCIONA... ------> 


EXECUTAMOS 

NOSSO ARQUIVO.... ----->





O 'hello from node.js'


APARECE NO TERMINAL...






-----> ISSO EXECUTA NOSSO CÓDIGO, E MOSTRA QUE O NODEJS É 


'JAVASCRIPT ON YOUR COMPUTER',




pq 


ele não está usando 

seu browser,



E SIM 


___ESTÁ 

__ USANDO 'THE INTERNAL ENGINE',




a EXTENDED INTERNAL JAVASCRIPT ENGINE USADA NORMALMENTE PELOS BROWSERS,


PARA 



RODAR SEU CÓDIGO LOCALMENTE,



FORA DE UM BROWSER....



---------------------





---> É CLARO QUE 

PODEMOS 

FAZER 


__MAIS DO QUE __ APENAS 


CONSOLE.LOGGAR 

'Hello from node.js'... 





----> PROFESSOR EXPLICA QUE 

PODEMOS 


'WRITE THIS CODE TO A FILE'... 







---> PARA ISSO, ELE EXPLICA QUE PODMEOS 



'IMPORT' 

ALGUMA COISA LÁ 

DO 


ENVIRONMENT DO NODEJS,





coisa que 

será 

o 


'fs'

O ___FILESYSTEm... ------>






POR ISSO QUE O PROFESSOR PROVAVELMENTE ESCREVERÁ:





const fs = require('fs');













ELE EXPLICA QUE VAMOS IMPORTAR ALGO LÁ DO ENVIRONMENT DO NODEJS... -----> 








POR MEIO DISSO, ADICIONAMOS/USAMOS 

A 

FEATURE 

DO 

FILESYSTEM AO NOSSO 

ARQUIVO/APP NODEJS... 







---------> OK, ELE ESCREVE EXATAMENTE 




'const fs = require('fs');'









FS ---> FILESYSTEM ---> ESSA SINTAXE IMPORTA ALGUMAS FUNCIONALIDADES DE 'FILE SYSTEM'

A 
ESSE 

ARQUIVO, PARA QUE POSSAMOS 

AS UTILIZAR NESSE APP/ARQUIVO...






-------> ISSO FEITO,


PROFESSOR DIZ QUE PODEMOS USAR 



'fs.writeFileSync()',



PARA 



__CRIAR UM NOVO __ ARQUIVO___...----> 






E ESSA FUNÇÃO 


___ ACEITA/EXIGE ALGUNS PARÂMETROS...








------> O PRIMEIRO PARÂMETRO É O __PATH __ EM QUE 

VAMOS QUERER 

'STORE' 

AQUELE ARQUIVO... ----> para isso,


PROFESSOR 


__PROVAVELMENTE __ VAI QUERER USAR 


O 


PACOTE/FUNCIONALIDADE DE 

'path'...



-----> OBS:::: 



ESSE 


'PATH'


em que vamos querer armazenar o arquivo, NO CASO 


DESSE 

'writeFileSync',



__TAMBÉM__ INCLUIRÁ/INCLUI O __ FILENAME__ DESSE ARQUIVO QUE 

VOCÊ VAI QUERER 

'WRITE/CREATE'... 





-------> COMO __VAMOS QUERER __ QUE O ARQUIVO SEJA CRIADO __ NO MESMO FOLDER EM QUE TEMOS 

ESSE 

'first-app.js',





VAMOS SIMPLESMENTE 

ESCREVER 


'hello.txt' (isso criará um arquivo TEXT com nome de 'hello' NESSE FOLDER de 'novonovoprojeto1')...




EX:




const fs = require('fs');





console.log('Hello from Node.js');




fs.writeFileSync('hello.txt');








---------------------------------------






É CLARO QUE PRECISAMOS TAMBÉM DE UM SEGUNDO ARGUMENTO, ARGUMENTO QUE SERÁ 



__ A DATA_ QUE VAMOS QUERER __ SALVAR DENTRO DESSE ARQUIVO___ ----> 
no caso,


o professor 


vai querer 

salvar 

'Hello from node.js'...





EX:



const fs = require('fs');





console.log('Hello from Node.js');




fs.writeFileSync('hello.txt', 'Hello from node.js'); ////////VERSÃO SÍNCRONA. 1o argumento ----> É O PATH __ EM QUE VOCÊ VAI QUERER SALVAR ESSE ARQUIVO.... 
                                                    //////ESSE 'PATH' SEMPRE DEVERÁ CONTER O ___NOME __ DO SEU ARQUIVO, ao final (se você quiser o CRIAR, como 'hello.txt', que será CRIADO por meio desse 'writeFileSync', se inda inexistir.... ) -----> E SE VOCÊ COLOCA SÓ O NOME DO ARQUIVO SOLTO, SEM O PATH ANTES DELE (tipo '/caminho/rota/destino/hello.txt', isso seria o nome com o path antes dele), se você faz isso, VOCÊ FARÁ COM QUE UM ARQUIVO COM ESSE NOME SEJA CRIADO NO MESMO FOLDER DESSE ARQUIVO '.js' QUE VOCê EXECUTOU/RODOU...


                                                    





 -------------------------------------------------







COM ISSO,
 
 SE AGORA 


 SALVARMOS 

 ISSO 



 E EXECUTARMOS 

 COM 

 'node first-app.js',





 VEREMOS 



 UM ARQUIVO 

 'hello.txt' no nosso folder de 'novonovoprojeto1'.....





 -----------------------------------------





 OK... ISSO FUNCIONOU...








 ------>  PROFESSOR EXPLICA QUE __ ESSA OPERAÇÃO __ DE WRITE AÍ ___ NÃO PODE 


 SER EXECUTADA NO BROWSERSIDE.. ---> ISSO PQ LÁ VOCÊ NÃO PODE 'ACCESS YOUR LOCAL FILESYSTEM' como 

 você consegue com o nodejs...







 --> E, OBVIAMENTE, SÃO FEATURES COMO ESSAS QUE VOCÊ PRECISA PARA 

 ENTÃO CRIAR UM ___ SERVER__(coisa que não temos no momento,
 
 
 

 PQ ISSO AQUI NÃO É UM WEBSITE OBVIAMENTE, E SIM É UM 

 UTILITY SCRIPT,


 SCRIPT QUE PODEMOS ESCREVER COM O NODEJS..
 )





 ---> ESSE FOI SÓ UM PRIMEIRO DEMO RÁPIDO...